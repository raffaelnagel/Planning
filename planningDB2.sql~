-- MySQL Script generated by MySQL Workbench
-- Wed 09 Apr 2014 02:15:41 PM BRT
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Planning
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Planning` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `Planning` ;

-- -----------------------------------------------------
-- Table `Planning`.`Login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Planning`.`Login` (
  `idPeople` INT NOT NULL,
  `User` VARCHAR(45) NULL,
  `Password` VARCHAR(45) NULL,
  `PermittionLevel` VARCHAR(45) NULL,
  PRIMARY KEY (`idPeople`),
  UNIQUE INDEX `User_UNIQUE` (`User` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Planning`.`People`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Planning`.`People` (
  `idPeople` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Code` CHAR(3) NULL,
  UNIQUE INDEX `Code_UNIQUE` (`Code` ASC),
  PRIMARY KEY (`idPeople`),
  UNIQUE INDEX `idPeople_UNIQUE` (`idPeople` ASC),
  CONSTRAINT `fk_People_Login1`
    FOREIGN KEY (`idPeople`)
    REFERENCES `Planning`.`Login` (`idPeople`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Planning`.`Team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Planning`.`Team` (
  `idPeople` INT NOT NULL,
  `idProject`  INT(4) UNSIGNED ZEROFILL NOT NULL,
  `Responsability` VARCHAR(45) NULL,
  PRIMARY KEY (`idPeople`, `idProject`),
  INDEX `fk_People_has_Project_Project1_idx` (`idProject` ASC),
  INDEX `fk_People_has_Project_People1_idx` (`idPeople` ASC),
  CONSTRAINT `fk_People_has_Project_People1`
    FOREIGN KEY (`idPeople`)
    REFERENCES `Planning`.`People` (`idPeople`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_People_has_Project_Project1`
    FOREIGN KEY (`idProject`)
    REFERENCES `Planning`.`Project` (`idProject`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `Planning`.`Resource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Planning`.`Resource` (
  `idResource` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Type` VARCHAR(45) NULL,
  PRIMARY KEY (`idResource`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Planning`.`ResourceAllocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Planning`.`ResourceAllocation` (
  `idProject` INT(4) UNSIGNED ZEROFILL NOT NULL,
  `idResource` INT NOT NULL,
  `Quantity` FLOAT NULL,
  PRIMARY KEY (`idProject`, `idResource`),
  INDEX `fk_Project_has_Resource_Resource1_idx` (`idResource` ASC),
  INDEX `fk_Project_has_Resource_Project1_idx` (`idProject` ASC),
  CONSTRAINT `fk_Project_has_Resource_Project1`
    FOREIGN KEY (`idProject`)
    REFERENCES `Planning`.`Project` (`idProject`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_has_Resource_Resource1`
    FOREIGN KEY (`idResource`)
    REFERENCES `Planning`.`Resource` (`idResource`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `Planning`.`Project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Planning`.`Project` (
  `idProject` INT(4) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  `ProjectCode` VARCHAR(45) NULL,
  `Name` VARCHAR(45) NULL,
  `Category` VARCHAR(45) NULL,
  `Brand` VARCHAR(45) NULL,
  `OpCo` VARCHAR(45) NULL,
  `EndMarket` VARCHAR(45) NULL,
  `Complexity` VARCHAR(10) NULL,
  `Approval` VARCHAR(3) NULL,
  `Start` TIMESTAMP NULL,
  `Finish` TIMESTAMP NULL,
  `Date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idProject`),
  UNIQUE INDEX `idProject_UNIQUE` (`idProject` ASC),
  UNIQUE INDEX `ProjectCode_UNIQUE` (`ProjectCode` ASC))   
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Planning`.`Plan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Planning`.`Plan` (
  `idPlan` INT NOT NULL AUTO_INCREMENT,
  `idProject` INT(4) UNSIGNED ZEROFILL NOT NULL,
  `Date` TIMESTAMP NULL,  
  `ActionPlan` VARCHAR(60) NULL,
  PRIMARY KEY (`idPlan`, `idProject`),  
  CONSTRAINT `fk_Plan_Project1`
    FOREIGN KEY (`idProject`)
    REFERENCES `Planning`.`Project` (`idProject`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Planning`.`Comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Planning`.`Comments` (
  `idComments` INT NOT NULL AUTO_INCREMENT,
  `idProject` INT(4) UNSIGNED ZEROFILL NOT NULL,
  `Date` TIMESTAMP NULL,
  `Comment` VARCHAR(80) NULL,
  PRIMARY KEY (`idComments`, `idProject`),
  CONSTRAINT `fk_Comments_Project1`
    FOREIGN KEY (`idProject`)
    REFERENCES `Planning`.`Project` (`idProject`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-- -----------------------------------------------------
-- INSERT SOME VALUES
-- -----------------------------------------------------

-- People & Login
INSERT INTO People(Name, Code) VALUES('Raffael Nagel', 'RIL');
INSERT INTO People(Name, Code) VALUES('Jonathan Farinela', 'JFI');
INSERT INTO People(Name, Code) VALUES('Flaviane Brevi', 'FLV');
INSERT INTO People(Name, Code) VALUES('Nicole Uttpot', 'NUT');
INSERT INTO People(Name, Code) VALUES('Luciana Castro', 'LAC');
INSERT INTO People(Name, Code) VALUES('Estefani Silveira', 'ETS');
INSERT INTO People(Name, Code) VALUES('Luciana Brasil', 'LCB');

INSERT INTO Login(idPeople, User, Password, PermittionLevel) VALUES(1, 'admin', 'admin', 0);
INSERT INTO Login(idPeople, User, Password, PermittionLevel) VALUES(2, 'jojo', '12345', 1);
INSERT INTO Login(idPeople, User, Password, PermittionLevel) VALUES(3, 'user1', '12345', 1);
INSERT INTO Login(idPeople, User, Password, PermittionLevel) VALUES(4, 'user2', '12345', 1);
INSERT INTO Login(idPeople, User, Password, PermittionLevel) VALUES(5, 'user3', '12345', 1);
INSERT INTO Login(idPeople, User, Password, PermittionLevel) VALUES(6, 'user4', '12345', 1);
INSERT INTO Login(idPeople, User, Password, PermittionLevel) VALUES(7, 'user5', '12345', 1);

SELECT * FROM People JOIN Login ON People.idPeople = Login.idPeople;

-- Projects
INSERT INTO Project(Name, Category, Brand, OpCo, EndMarket, Complexity) VALUES('Projeto 1', 'BAU', 'Marlboro', 'BR', 'BR', '1');
INSERT INTO Project(Name, Category, Brand, OpCo, EndMarket, Complexity) VALUES('Projeto 2', 'BAU', 'Marlboro', 'BR', 'BR', '1');

-- update projects code
UPDATE Project SET ProjectCode = CONCAT(YEAR(Date), '_', idProject);


-- resources
INSERT INTO Resource(Name, Type) VALUES('Analysis','Statistics');
INSERT INTO Resource(Name, Type) VALUES('Sampling','RCPA');
INSERT INTO Resource(Name, Type) VALUES('Tobacco','PPI');

-- team
INSERT INTO Team(idProject, idPeople, Responsability) VALUES(1, 2, 'Statistic');
INSERT INTO Team(idProject, idPeople, Responsability) VALUES(1, 5, 'LAS');
INSERT INTO Team(idProject, idPeople, Responsability) VALUES(1, 6, 'Smoke_Routine');
INSERT INTO Team(idProject, idPeople, Responsability) VALUES(1, 7, 'TRM');

INSERT INTO Team(idProject, idPeople, Responsability) VALUES(2, 3, 'Statistic');
INSERT INTO Team(idProject, idPeople, Responsability) VALUES(2, 5, 'LAS');
INSERT INTO Team(idProject, idPeople, Responsability) VALUES(2, 6, 'Smoke_Routine');

-- plan
INSERT INTO Plan(idProject, Date, ActionPlan) VALUES(1, NOW(), 'Sampling');
INSERT INTO Plan(idProject, Date, ActionPlan) VALUES(1, NOW(), 'Packaging');
INSERT INTO Plan(idProject, Date, ActionPlan) VALUES(2, NOW(), 'Send to LAT');
INSERT INTO Plan(idProject, Date, ActionPlan) VALUES(2, NOW(), 'Receive From LAT');
INSERT INTO Plan(idProject, Date, ActionPlan) VALUES(2, NOW(), 'Send to RCPA');

-- Comments
INSERT INTO Comments(idProject, Date, Comment) VALUES(1, NOW(), 'first comment of Projeto 1');
INSERT INTO Comments(idProject, Date, Comment) VALUES(1, NOW(), 'second comment of Projeto 1');
INSERT INTO Comments(idProject, Date, Comment) VALUES(1, NOW(), 'another comment of Projeto 1');
INSERT INTO Comments(idProject, Date, Comment) VALUES(1, NOW(), 'another one comment of Projeto 1');
INSERT INTO Comments(idProject, Date, Comment) VALUES(1, NOW(), 'last comment of Projeto 1');

INSERT INTO Comments(idProject, Date, Comment) VALUES(2, NOW(), 'unique comment of Projeto 2');


-- join
SELECT * FROM People JOIN Team ON People.idPeople = Team.idPeople JOIN Project ON Team.idProject = Project.idProject;






